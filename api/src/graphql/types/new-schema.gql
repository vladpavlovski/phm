scalar Point
scalar Date
scalar DateTime
scalar Time
scalar Long


# 1. :Player :Goalkeeper

type Player {
  playerId: ID!
  firstName: String!
  lastName: String!
  birthdate: Date
  internalId: Int
  avatar: String
  isActive: Boolean
  country: String
  city: String
  position: String
  stick: String
  height: Int
  weight: Int
  jersey: Int
  gender: String
  disabled: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  meta: MetaPlayer @relation(name: "META_FOR", direction: IN)
  teams: [Team] @relation(name: "PLAY_IN", direction: OUT)
  account: Account @relation(name: "HAS_ACCOUNT", direction: OUT)
  achievements: [Achievement] @relation(name: "HAS_ACHIEVEMENT", direction: OUT)
  awards: [Award] @relation(name: "WIN_AN_AWARD", direction: OUT)
  sponsors: [Sponsor] @relation(name: "SPONSORED_BY", direction: OUT)
}


# 2. :MetaPlayer

type MetaPlayer {
  metaPlayerId: ID!
  player: Player @relation(name: "META_FOR", direction: OUT)
  availabilityStatus: AvailabilityStatus @relation(name: "GAME_READY_FOR", direction: IN)
  lineups: [Lineup] @relation(name: "TAKING_PART_IN", direction: OUT)
  transfers: [Transfer] @relation(name: "TRANSFER_FOR_PLAYER, direction: IN)
  stars: [Star] @relation(name: "IS_STAR", direction: IN)
  collectedPasses: [Pass] @relation(name: "COLLECT_BY", direction: IN)
  sentPasses: [Pass] @relation(name: "SENT_BY", direction: IN)
  offsides: [Offside] @relation(name: "CAUSED_BY", direction: IN)
  scoredGoals: [Goal] @relation(name: "SCORED_BY", direction: IN)
  allowedGoals: [Goal] @relation(name: "ALLOWED_BY", direction: IN)
  firedShots: [Shot] @relation(name: "FIRED_BY", direction: IN)
  blockedShots: [Shot] @relation(name: "BLOCKED_BY", direction: IN)
  facedShots: [Shot] @relation(name: "FACED_TO", direction: IN)
  executedPenaltyShots: [PenaltyShot] @relation(name: "EXECUTED_BY", direction: IN)
  facedPenaltyShots: [PenaltyShot] @relation(name: "FACED_AGAINST", direction: IN)
  penalties: [Penalty] @relation(name: "PENALIZED", direction: IN)
  intervalOnIce: [IntervalOnIce] @relation(name: "SPENT_BY", direction: IN)
  fights: [Fight] @relation(name: "PARTICIPATE_IN", direction: IN)
  lostFaceOffs: [FaceOff] @relation(name: "LOST_BY", direction: IN)
  wonFaceOffs: [FaceOff] @relation(name: "WON_BY", direction: IN)
  icings: [Icing] @relation(name: "CAUSED_BY", direction: IN)
  lostTakeOvers: [TakeOver] @relation(name: "LOST_BY", direction: IN)
  richedTakeOvers: [TakeOver] @relation(name: "RICHED_BY", direction: IN)
  hits: [Hit] @relation(name: "GIVE_BY", direction: IN)
  discussion: Discussion @relation(name: "HAS_DISCUSSION", direction: OUT)
  media: Media @relation(name: "HAS_MEDIA", direction: OUT)
}


#3. :Person :Manager :Coach :CoachAssistant :Medic :Supporter :Referee :TimePicker :GameOfficial :LeagueOfficial

type Person {
  personId: ID!
  firstName: String!
  lastName: String!
  userName: String
  phone: String
  disabled: Boolean
  gender: String
  createdAt: DateTime
  updatedAt: DateTime
  account: Account @relation(name: "ACCOUNT_FOR", direction: IN)
  managers: [Person] @relation(name: "HAS_MANAGER", direction: OUT)
  teamManager: [Team] @relation(name: "HAS_MANAGER", direction: IN)
  teamCoach: [Team] @relation(name: "HAS_COACH", direction: IN)
  teamCoachAssistant: [Team] @relation(name: "HAS_COACH_ASSISTANT", direction: IN)
  teamMedic: [Team] @relation(name: "HAS_MEDIC", direction: IN)
  teamSupporter: [Team] @relation(name: "HAS_SUPPORTER", direction: IN)
  gameOfficial: [Game] @relation(name: "HAS_GAME_OFFICIAL", direction: IN)
  gameTimePicker: [Game] @relation(name: "HAS_TIMEPICKER", direction: IN)
  gameReferee: [Game] @relation(name: "HAS_REFEREE", direction: IN)
  competitionTimePicker: [Competition] @relation(name: "HAS_TIMEPICKER", direction: IN)
  competitionLeagueOfficial: [Competition] @relation(name: "HAS_LEAGUE_OFFICIAL", direction: IN)
  competitionReferee: [Competition] @relation(name: "HAS_REFEREE", direction: IN)
  competitionManager: [Competition] @relation(name: "HAS_MANAGER", direction: IN)
  discussion: Discussion @relation(name: "HAS_DISCUSSION", direction: OUT)
  media: Media @relation(name: "HAS_MEDIA", direction: OUT)
  payments: [Payment] @relation(name: "INITIATES_PAYMENT", direction: OUT)
  associationManager: [Association] @relation(name: "HAS_MANAGER", direction: IN)
  awards: [Award] @relation(name: "WIN_AN_AWARD", direction: OUT)
  sponsors: [Sponsor] @relation(name: "SPONSORED_BY", direction: OUT)
  achievements: [Achievement] @relation(name: "HAS_ACHIEVEMENT", direction: OUT)
}

# 4. :Account

type Account {
  accountId: ID!
  firstName: String!
  lastName: String!
  userName: String
  phone: String
  email: String
  meta: MetaAccount @relation(name: "META_FOR", direction: IN)
  player: Player @relation(name: "ACCOUNT_FOR", direction: OUT)
  person: Person @relation(name: "ACCOUNT_FOR", direction: OUT)
  events: [Event] @relation(name: "ORGANIZE_AN", direction: OUT)
}

# 5. :MetaAccount

type MetaAccount {
  metaAccountId: ID!
  account: Account @relation(name: "META_FOR", direction: OUT)
  sentInvitations: [Invitation] @relation(name: "SENT_BY", direction: IN)
  acceptedInvitations: [Invitation] @relation(name: "ACCEPTED_BY", direction: IN)
  rejectedInvitations: [Invitation] @relation(name: "REJECTED_BY", direction: IN)
  maybeInvitations: [Invitation] @relation(name: "MAYBE_BY", direction: IN)
  comments: [Comment] @relation(name: "WRITE_A_COMMENT", direction: OUT)
}

#6. :Team

type Team {
  teamId: ID!
  name: String!
  fullName: String!
  nick: String
  shortcut: String
  logoRound: String
  shortcutLabel: String
  shortLabel: String
  longLabel: String
  bigLabel: String
  logoGrey: String
  primaryColor: String
  secondaryColor: String
  jerseyDark: String
  jerseyLight: String
  disabled: Boolean
  createdAt: DateTime
  updateAt: DateTime
  manager: Person @relation(name: "HAS_TEAM_MANAGER", direction: OUT)
  lineupsAsGuest: [Lineup] @relation(name: "DEFINES_AS_GUEST", direction: OUT)
  lineupsAsHost: [Lineup] @relation(name: "DEFINES_AS_HOST", direction: OUT)
  players: [Player] @relation(name: "PLAY_IN", direction: IN)
  coaches: [Person] @relation(name: "HAS_COACH", direction: OUT)
  coachAssistants: [Person] @relation(name: "HAS_COACH_ASSISTANT", direction: OUT)
  medics: [Person] @relation(name: "HAS_MEDIC", direction: OUT)
  supporters: [Person] @relation(name: "HAS_SUPPORTER", direction: OUT)
  awards: [Award] @relation(name: "WIN_AN_AWARD", direction: OUT)
  sponsors: [Sponsor] @relation(name: "SPONSORED_BY", direction: OUT)
  gameEvents: [GameEvent] @relation(name: "CREATED_BY", direction: IN)
  transfers: [Transfer] @relation(name: "TRANSFER_FOR_TEAM", direction: OUT)
}


# 7. :Lineup

type Lineup {
  lineupId: ID!
  teamGuest: Team @relation(name: "DEFINES_AS_GUEST, direction: IN)
  teamHost: Team @relation(name: "DEFINES_AS_HOST, direction: IN)
  listGuest: [Player] @relation(name: "TAKING_PART_IN", direction: IN)
  listHost: [Player] @relation(name: "TAKING_PART_IN", direction: IN)
  game: Game @relation(name: "GENERATES", direction: OUT)
}


# 8. :Game

type Game {
  gameId: ID!
  name: String
  type: String
  startDate: Date
  endDate: Date
  startTime: Time
  endTime: Time
  foreignId: String
  info: String
  description: String
  lineup: Lineup @relation(name: "GENERATES", direction: IN)
  gameOfficial: Person @relation(name: "HAS_GAME_OFFICIAL", direction: OUT)
  referee: Person @relation(name: "HAS_REFEREE", direction: OUT)
  timePicker: Person @relation(name: "HAS_TIMEPICKER", direction: OUT)
  phase: Phase @relation(name: "COMPLETE_IN", direction: OUT)
  group: Group @relation(name: "PARTICIPATE_IN", direction: OUT)
  venue: Venue @relation(name: "TAKES_PLAYS_ON", direction: OUT)
  payment: Payment @relation(name: "PAYMENT_FOR_GAME", direction: IN)
  event: Event @relation(name: "TRANSFORM_TO", direction: IN)
  rules: Rules @relation(name: "GUIDED_BY", direction: OUT)
  media: Media @relation(name: "HAS_MEDIA", direction: OUT)
}


# 9. :GameEvent

type GameEvent {
  gameEventId: ID!
  timestamp: DateTime!
  location: String
  period: String
  goals: [Goal] @relation(name: "CREATE_GOAL", direction: OUT)
  penalties: [Penalty] @relation(name: "CREATE_PENALTY", direction: OUT)
  faceOffs: [FaceOff] @relation(name: "CREATE_FACEOFF", direction: OUT)
  passes: [Pass] @relation(name: "CREATE_PASS", direction: OUT)
  hits: [Hit] @relation(name: "CREATE_HIT", direction: OUT)
  penaltyShots: [PenaltyShot] @relation(name: "CREATE_PENALTY_SHOT", direction: OUT)
  shots: [Shot] @relation(name: "CREATE_SHOT", direction: OUT)
  revisions: [Revision] @relation(name: "CREATE_REVISION, direction: OUT)
  fights: [Fight] @relation(name: "CREATE_FIGHT", direction: OUT)
  intervalsOnIce: [IntervalOnIce] @relation(name: "CREATE_INTERVAL_ON_ICE", direction: OUT)
  icings: [Icing] @relation(name: "CREATE_ICING", direction: OUT)
  timeouts: [Timeout] @relation(name: "CREATE_TIMEOUT", direction: OUT)
  offsides: [Offside] @relation(name: "CREATE_OFFSIDE", direction: OUt)
  stars: [Star] @relation(name: "CREATE_STAR", direction: OUT)
  takeOvers: [TakeOver] @relation(name: "CREATE_TAKEOVER", direction: OUT)
  injuries: [Injury] @relation(name: "CREATE_INJURY", direction: OUT)
  team: Team @relation(name: "CREATED_BY", direction: OUT)
  previousGameEvent: GameEvent @relation(name: "PREVIOUS_GAME_EVENT", direction: OUT)
  nextGameEvent: GameEvent @relation(name: "PREVIOUS_GAME_EVENT", direction: IN)
}


# 10. :Star

type Star {
  starId: ID!
  gameEvent: GameEvent @relation(name: "CREATE_STAR", direction: IN)
  player: Person @relation(name: "IS_STAR", direction: OUT)
  award: Award @relation(name: "WIN_AN_AWARD", direction: OUT)
}


# 11. :Pass

type Pass {
  passId: ID!
  gameEvent: GameEvent @relation(name: "CREATE_PASS", direction: IN)
  locationStart: String
  locationEnd: String
  collectBy: Player @relation(name: "COLLECT_BY", direction: OUT)
  sentBy: Player @relation(name: "SENT_BY", direction: OUT)
  shot: Shot @relation(name: "ASSISTANCE", direction: OUT)
}

#  12. :Offside
type Offside {
  offsideId: ID!
  gameEvent: GameEvent @relation(name: "CREATE_OFFSIDE", direction: IN)
  causedBy: Player @relation(name: "CAUSED_BY", direction: OUT)
  checkedBy: Revision @relation(name: "CHECKED_BY", direction: OUT)
}

# 13. :Goal
type Goal {
  goalId: ID!
  type: String
  subType: String
  gameEvent: GameEvent @relation(name: "CREATE_GOAL", direction: IN)
  scoredBy: Player @relation(name: "SCORED_BY", direction: OUT)
  allowedBy: Player @relation(name: "ALLOWED_BY", direction: OUT)
  shot: Shot @relation(name: "CREATED_BY", direction: OUT)
  checkedBy: Revision @relation(name: "CHECKED_BY", direction: OUT)
  canceledBy: Revision @relation(name: "CANCELED_BY", direction: OUT)
}

# 14. :Shot
type Shot {
  shotId: ID!
  type: String
  subType: String
  target: String
  style: String
  gameEvent: GameEvent @relation(name: "CREATE_SHOT", direction: IN)
  firedBy: Player @relation(name: "FIRED_BY", direction: OUT)
  facedTo: Player @relation(name: "FACED_TO", direction: OUT)
  blockedBy: Player @relation(name: "BLOCKED_BY", direction: OUT)
  pass: Pass @relation(name: "ASSISTANCE", direction: IN)
  goal: Goal @relation(name: "CREATED_BY", direction: IN)
  penaltyShot: PenaltyShot @relation(name: "CREATED_BY", direction: OUT)

}

# 15. :PenaltyShot
type PenaltyShot {
  penaltyShotId: ID!
  status: String
  gameEvent: GameEvent @relation(name: "CREATE_PENALTY_SHOT", direction: IN)
  penalty: Penalty @relation(name: "CREATED_BY", direction: OUT)
  facedAgainst: Player @relation(name: "FACED_AGAINST", direction: OUT)
  executedBy: Player @relation(name: "EXECUTED_BY", direction: OUT)
  shot: Shot @relation(name: "CREATED_BY", direction: IN)
  checkedBy: Revision @relation(name: "CHECKED_BY", direction: OUT)
  canceledBy: Revision @relation(name: "CANCELED_BY", direction: OUT)
  createdBy: Revision @relation(name: "CREATED_BY", direction: OUT)
}

# 16. :Revision
union CheckedRevisions = Offside | Goal | PenaltyShot
union CanceledRevisions = Timeout | PenaltyShot | Goal
type Revision {
  revisionId: ID!
  gameEvent: GameEvent @relation(name: "CREATE_REVISION", direction: IN)
  canceled: [CanceledRevisions] @relation(name: "CANCELED_BY", direction: IN)
  checked: [CheckedRevisions] @relation(name: "CHECKED_BY", direction: IN)
}

# 17. :Timeout
type Timeout {
  timeoutId: ID!
  gameEvent: GameEvent @relation(name: "CREATE_TIMEOUT", direction: IN)
  canceledBy: Revision @relation(name: "CANCELED_BY", direction: OUT)
}

# 18. :Penalty
type Penalty {
  penaltyId: ID!
  suspension: Suspension @relation(name: "CREATE_SUSPENSION", direction: OUT)
  type: String
  subType: String
  duration: Int
  gameEvent: GameEvent @relation(name: "CREATE_PENALTY", direction: IN)
  penalized: Player @relation(name: "PENALIZED", direction: OUT)
  penaltyShot: PenaltyShot @relation(name: "CREATED_BY", direction: IN)
  suspension: Suspension @relation(name: "CREATE_SUSPENSION", direction: OUT)
}

# 19. :IntervalOnIce
type IntervalOnIce {
  intervalOnIceId: ID!
  endTime: DateTime
  duration: Int
  gameEvent: GameEvent @relation(name: "CREATE_INTERVAL_ON_ICE", direction: IN)
  spentBy: Player @relation(name: "SPENT_BY", direction: OUT)
}

# 20. :Fight
type Fight {
  fightId: ID!
  gameEvent: GameEvent @relation(name: "CREATE_FIGHT", direction: IN)
  players: [Player] @relation(name: "PARTICIPATE_IN", direction: OUT)

}

# 21. :FaceOff
type FaceOff {
  faceOffId: ID!
  gameEvent: GameEvent @relation(name: "CREATE_FACEOFF", direction: IN)
  lostBy: Player @relation(name: "LOST_BY", direction: OUT)
  wonBy: Player @relation(name: "WON_BY", direction: OUT)

}

# 22. :Icing
type Icing {
  icingId: ID!
  gameEvent: GameEvent @relation(name: "CREATE_ICING", direction: IN)
  causedBy: Player @relation(name: "CAUSED_BY", direction: OUT)

}

# 23. :TakeOver
type TakeOver {
  takeOverId: ID!
  gameEvent: GameEvent @relation(name: "CREATE_TAKEOVER", direction: IN)
  lostBy: Person @relation(name: "LOST_BY", direction: OUT)
  richedBy: Person @relation(name: "RICHED_BY", direction: OUT)
}

# 24. :Hit
type Hit {
  hitId: ID!
  gameEvent: GameEvent @relation(name: "CREATE_HIT", direction: IN)
  giveBy: Player @relation(name: "GIVE_BY", direction: OUT)

}

# 25. :Injury
type Injury {
  injuryId: ID!
  gameEvent: GameEvent @relation(name: "CREATE_INJURY", direction: IN)
  availabilityStatus: AvailabilityStatus @relation(name: "SUFFERED_AN", direction: OUT)
}

# 26. :Suspension
type Suspension {
  suspensionId: ID!
  availabilityStatus: AvailabilityStatus @relation(name: "HAS_AN_IMPACT", direction: OUT)
  penalty: Penalty @relation(name: "CREATE_SUSPENSION", direction: IN)
}

# 27. :AvailabilityStatus
type AvailabilityStatus {
  availabilityStatusId: ID!
  metaPlayer: MetaPlayer @relation(name: "GAME_READY_FOR", direction: OUT)
  injuries: Injury @relation(name: "SUFFERED_AN", direction: IN)
  suspensions: Suspension @relation(name: "HAS_AN_IMPACT", direction: IN)
}

# 28. :Transfer
type Transfer {
  transferId: ID!
  team: Team @relation(name: "TRANSFER_FOR_TEAM", direction: IN)
  metaPlayer: MetaPlayer @relation(name: "TRANSFER_FOR_PLAYER", direction: OUT)
}

# 29. :Discussion
type Discussion {
  discussionId: ID!
  comments: [Comment] @relation(name: "CONTAINS", direction: OUT)
  game: Game @relation(name: "HAS_DISCUSSION", direction: IN)
  competition: Competition @relation(name: "HAS_DISCUSSION", direction: IN)
  media: Media @relation(name: "HAS_DISCUSSION", direction: IN)
  person: Person @relation(name: "HAS_DISCUSSION", direction: IN)
  association: Association @relation(name: "HAS_DISCUSSION", direction: IN)
  group: Group @relation(name: "HAS_DISCUSSION", direction: IN)
  phase: Phase @relation(name: "HAS_DISCUSSION", direction: IN)
  award: Award @relation(name: "HAS_DISCUSSION", direction: IN)
  sponsor: Sponsor @relation(name: "HAS_DISCUSSION", direction: IN)
  metaPlayer: MetaPlayer @relation(name: "HAS_DISCUSSION", direction: IN)
}

# 30. :Comment
type Comment {
  commentId: ID!
  previousComment: Comment @relation(name: "PREVIOUS_COMMENT", direction: OUT)
  nextComment: Comment @relation(name: "PREVIOUS_COMMENT, direction: IN)
  replyTo: Comment @relation(name: "REPLY_TO", direction: OUT)
  repliedTo: [Comment] @relation(name: "REPLY_TO", direction: IN)
  discussion: Discussion @relation(name: "CONTAINS", direction: IN)
}

# 31. :Association
type Association {
  associationId: ID!
  name: String
  sponsors: [Sponsor] @relation(name: "SPONSORED_BY", direction: OUT)
  discussion: Discussion @relation(name: "HAS_DISCUSSION", direction: OUT)
  manager: Person @relation(name: "HAS_MANAGER", direction: OUT)
  payments: [Payment] @relation(name: "RECEIVES_PAYMENT", direction: IN)
  competitions: [Competition] @relation(name: "OWNED_BY", direction: IN)
  media: Media @relation(name: "HAS_MEDIA", direction: OUT)
  rules: Rules @relation(name: "GUIDED_BY", direction: OUT)
}

# 32. :Sponsor
type Sponsor {
  sponsorId: ID!
  name: String
  web: String
  logo: String
  description: String
  players: [Player] @relation(name: "SPONSORED_BY", direction: IN)
  teams: [Team] @relation(name: "SPONSORED_BY", direction: IN)
  persons: [Person] @relation(name: "SPONSORED_BY", direction: IN)
  awards: [Award] @relation(name: "SPONSORED_BY", direction: IN)
  competitions: [Competition] @relation(name: "SPONSORED_BY", direction: IN)
  discussion: Discussion @relation(name: "HAS_DISCUSSION", direction: OUT)
  media: Media @relation(name: "HAS_MEDIA", direction: OUT)
}

# 33. :Venue
type Venue {
  venueId: ID!
  name: String
  web: String
  description: String
  photo: String
  disabled: Boolean
  competitions: [Competition] @relation(name: "TAKES_PLAYS_ON", direction: IN)
  games: [Game] @relation(name: "TAKES_PLAYS_ON", direction: IN)
  address: Address @relation(name: "LOCATED_AT", direction: OUT)

}

# 34. :Address
type Address {
  addressId: ID!
  addressLine1: String
  addressLine2: String
  addressLine3: String
  city: String
  countyProvince: String
  zip: String
  country: String
  other: String
  latitude: Float
  longitude: Float
  addressType: String
  venue: Venue @relation(name: "LOCATED_AT", direction: IN)
  events: [Event] @relation(name: "TAKES_PLACE_AT", direction: IN)
}

# 35. :Competition
type Competition {
  competitionId: ID!
  name: String!
  isActive: Boolean
  association: Association @relation(name: "OWNED_BY", direction: OUT)
  rules: Rules @relation(name: "GUIDED_BY", direction: OUT)
  events: [Event] @relation(name: "ORGANIZE_AN", direction: OUT)
  venue: [Venue] @relation(name: "TAKES_PLAYS_ON", direction: OUT)
  phases: [Phase] @relation(name: "DIVIDED", direction: OUT)
  groups: [Group] @relation(name: "DIVIDED", direction: OUT)
  season: Season @relation(name: "BELONGS_TO", direction: OUT)
  sponsors: [Sponsor] @relation(name: "SPONSORED_BY", direction: OUT)
  awards: [Award] @relation(name: "BELONGS_TO", direction: IN)
  media: Media @relation(name: "HAS_MEDIA", direction: OUT)
  managers: [Person] @relation(name: "HAS_MANAGER", direction: OUT)
  referees: [Person] @relation(name: "HAS_REFEREE", direction: OUT)
  leagueOfficials: [Person] @relation(name: "HAS_LEAGUE_OFFICIAL", direction: OUT)
  timePickers: [Person] @relation(name: "HAS_TIMEKEEPER", direction: OUT)
  teams: [Team] @relation(name: "PARTICIPATE_IN", direction: IN)
  discussion: Discussion @relation(name: "HAS_DISCUSSION", direction: OUT)
}

# 36. :Event
union EventOrganizer = Competition | MetaAccount | Team
type Event {
  eventId: ID!
  name: String
  date: Date
  time: Time
  address: Address @relation(name: "TAKES_PLACE_AT", direction: OUT)
  organizer: EventOrganizer @relation(name: "ORGANIZE_AN", direction: IN)
  game: Game @relation(name: "TRANSFORM_TO", direction: OUT)
}

# 37. :Season
type Season {
  seasonId: ID!
  name: String
  startDate: Date
  endDate: Date
  competition: Competition @relation(name: "BELONGS_TO", direction: IN)
}

# 38. :Group
type Group {
  groupId: ID!
  name: String
  competition: Competition @relation(name: "DIVIDED", direction: IN)
  rules: Rules @relation(name: "GUIDED_BY", direction: OUT)
  media: Media @relation(name: "HAS_MEDIA", direction: OUT)
  games: [Game] @relation(name: "PARTICIPATE_IN", direction: IN)
  discussion: Discussion @relation(name: "HAS_DISCUSSION", direction: OUT)
  awards: [Award] @relation(name: "BELONGS_TO", direction: IN)
}

# 39. :Phase
type Phase {
  phaseId: ID!
  name: String
  competition: Competition @relation(name: "DIVIDED", direction: IN)
  rules: Rules @relation(name: "GUIDED_BY", direction: OUT)
  media: Media @relation(name: "HAS_MEDIA", direction: OUT)
  games: [Game] @relation(name: "COMPLETE_IN", direction: IN)
  discussion: Discussion @relation(name: "HAS_DISCUSSION", direction: OUT)
  awards: [Award] @relation(name: "BELONGS_TO", direction: IN)
}

# 40. :Payment
type Payment {
  paymentId: ID!
  initiator: Person @relation(name: "INITIATES_PAYMENT", direction: IN)
  receiver: Association @relation(name: "RECEIVES_PAYMENT", direction: OUT)
  game: Game @relation(name: "PAYMENT_FOR_GAME", direction: OUT)
}

# 41. :Award
type Award {
  awardId: ID!
  phases: [Phase] @relation(name: "BELONGS_TO", direction: OUT)
  groups: [Group] @relation(name: "BELONGS_TO", direction: OUT)
  competitions: [Competition] @relation(name: "BELONGS_TO", direction: OUT)
  sponsors: [Sponsor] @relation(name: "SPONSORED_BY", direction: OUT)
  media: Media @relation(name: "HAS_MEDIA", direction: OUT)
  games: [Game] @relation(name: "HAS_AN_AWARD", direction: IN)
  persons: [Person] @relation(name: "WIN_AN_AWARD", direction: IN)
  teams: [Team] @relation(name: "WIN_AN_AWARD", direction: IN)
  stars: [Star] @relation(name: "WIN_AN_AWARD", direction: IN)
  players: [Player] @relation(name: "WIN_AN_AWARD", direction: IN)
  discussion: Discussion @relation(name: "HAS_DISCUSSION", direction: OUT)
}

# 42. :Media
type Media {
  mediaId: ID!
  associations: [Association] @relation(name: "HAS_MEDIA", direction: IN)
  phases: [Phase] @relation(name: "HAS_MEDIA", direction: IN)
  groups: [Group] @relation(name: "HAS_MEDIA", direction: IN)
  sponsors: [Sponsor] @relation(name: "HAS_MEDIA", direction: IN)
  awards: [Award] @relation(name: "HAS_MEDIA", direction: IN)
  metaPlayers: [MetaPlayer] @relation(name: "HAS_MEDIA", direction: IN)
  comments: [Comment] @relation(name: "HAS_MEDIA", direction: IN)
  persons: [Person] @relation(name: "HAS_MEDIA", direction: IN)
  games: [Game] @relation(name: "HAS_MEDIA", direction: IN)
  competitions: [Competition] @relation(name: "HAS_MEDIA", direction: IN)
  discussion: Discussion  @relation(name: "HAS_DISCUSSION", direction: OUT)
  photos: [File] @relation(name: "PHOTO", direction: OUT)
  videos: [File] @relation(name: "VIDEO", direction: OUT)
  audios: [File] @relation(name: "AUDIO", direction: OUT)
}

# 43. :File
type File {
  fileId: ID!
  name: String
  description: String
  type: String
  url: String
  mediaPhoto: [Media] @relation(name: "PHOTO", direction: IN)
  mediaVideo: [Media] @relation(name: "VIDEO", direction: IN)
  mediaAudio: [Media] @relation(name: "AUDIO", direction: IN)
}

# 44. :Invitation
type Invitation {
  invitationId: ID!
  name: String
  description: String
  event: Event @relation(name: "CREATE", direction: IN)
  sentBy: MetaAccount @relation(name: "SENT_BY", direction: OUT)
  acceptedBy: [MetaAccount] @relation(name: "ACCEPTED_BY", direction: OUT)
  rejectedBy: [MetaAccount] @relation(name: "REJECTED_BY", direction: OUT)
  maybeBy: [MetaAccount] @relation(name: "MAYBE_BY", direction: OUT)
}

# 45. :Achievement
type Achievement {
  achievementId: ID!
  name: String
  description: String
  players: [Player] @relation(name: "HAS_ACHIEVEMENT", direction: IN)
  persons: [Person] @relation(name: "HAS_ACHIEVEMENT", direction: IN)
  teams: [Team] @relation(name: "HAS_ACHIEVEMENT", direction: IN)
}

# 46. :Rules
type Rules {
  rulesId: ID!
  name: String
  associations: [Association] @relation(name: "GUIDED_BY", direction: IN)
  phases: [Phase] @relation(name: "GUIDED_BY", direction: IN)
  groups: [Group] @relation(name: "GUIDED_BY", direction: IN)
  games: [Game] @relation(name: "GUIDED_BY", direction: IN)
  competitions: [Competition] @relation(name: "GUIDED_BY", direction: IN)
  penaltyShotStatuses: [PenaltyShotStatus] @relation(name: "SET_UP", description: OUT)
  periods: [Period] @relation(name: "SET_UP", description: OUT)
  shotSubTypes: [ShotSubType] @relation(name: "SET_UP", description: OUT)
  shotTargets: [ShotTarget] @relation(name: "SET_UP", description: OUT)
  shotStyles: [ShotStyle] @relation(name: "SET_UP", description: OUT)
  shotTypes: [ShotType] @relation(name: "SET_UP", description: OUT)
  goalTypes: [GoalType] @relation(name: "SET_UP", description: OUT)
  goalSubTypes: [GoalSubType] @relation(name: "SET_UP", description: OUT)
  penaltySubTypes: [PenaltySubType] @relation(name: "SET_UP", description: OUT)
  penaltyTypes: [PenaltyType] @relation(name: "SET_UP", description: OUT)
  gameEventLocations: [GameEventLocation] @relation(name: "SET_UP", description: OUT)
}

# 47. :PenaltyShotStatus
type PenaltyShotStatus {
  penaltyShotStatusId: ID!
  name: String
  rule: Rules @relation(name: "SET_UP", description: IN)
}

# 48. :Period
type Period {
  periodId: ID!
  rule: Rules @relation(name: "SET_UP", description: IN)
}

# 49. :ShotSubType
type ShotSubType {
  shotSubTypeId: ID!
  name: String
  rule: Rules @relation(name: "SET_UP", description: IN)
}

# 50. :ShotTarget
type ShotTarget {
  shotTargetId: ID!
  name: String
  rule: Rules @relation(name: "SET_UP", description: IN)
}

# 51. :ShotStyle
type ShotStyle {
  shotStyleId: ID!
  name: String
  rule: Rules @relation(name: "SET_UP", description: IN)
}

# 52. :ShotType
type ShotType {
  shotTypeId: ID!
  name: String
  rule: Rules @relation(name: "SET_UP", description: IN)
}

# 53. :GoalType
type GoalType {
  goalTypeId: ID!
  rule: Rules @relation(name: "SET_UP", description: IN)
}

# 54. :GoalSubType
type GoalSubType {
  goalSubTypeId: ID!
  rule: Rules @relation(name: "SET_UP", description: IN)
}

# 55. :PenaltySubType
type PenaltySubType {
  penaltySubTypeId: ID!
  rule: Rules @relation(name: "SET_UP", description: IN)
}

# 56. :PenaltyType
type PenaltyType {
  PenaltyTypeId: ID!
  rule: Rules @relation(name: "SET_UP", description: IN)
}

# 57. :GameEventLocation
type GameEventLocation {
  gameEventLocationId: ID!
  rule: Rules @relation(name: "SET_UP", description: IN)
}
